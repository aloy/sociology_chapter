jm
jsim <- simulate(jm)
jrefit <- refit(jm, jsim)
qplot(x = Exam$standLRT, y = resid(jrefit))
qplot(x = Exam$standLRT, y = resid(jrefit), geom = "smooth")
jm
jm.linear <- lmer(normexam ~ standLRT + (standLRT | school), data = Exam )
jrefit <- refit(jm.linear, jsim)
qplot(x = Exam$standLRT, y = resid(jrefit), geom = "smooth")
qplot(x = Exam$standLRT, y = resid(jrefit))
qplot(x = Exam$standLRT, y = resid(jrefit), geom = c("point", "linear"))
qplot(x = Exam$standLRT, y = resid(jrefit), geom = c("point", "smooth"))
library(WWGbook)
help(package=WWGbook)
head(autism)
jm <- lmer(vsae ~ poly(age2, 2) + (age2 - 1 | childid), data = autism)
jm <- lmer(vsae ~ poly(age, 2) + (age - 1 | childid), data = autism)
jsim <- simulate(jm)
jm0 <- lmer(vsae ~ age + (age - 1 | childid), data = autism)
jrefit <- refit(jm0, jsim)
jrefit
qplot(x = autism$age, y = resid(autism))
qplot(x = autism$age, y = resid(jrefit))
resid(jrefit)
qplot(x = jrefit@frame$age, y = resid(jrefit))
qplot(x = jrefit@frame$age, y = resid(jrefit), geom = "smooth")
head(Exam)
M1 <- lmer(normexam ~ standLRT + (1 | school), data = Exam)
M2 <- lmer(normexam ~ standLRT + (standLRT  | school), data = Exam)
fm2 <- lmer(normexam^2 ~ standLRT + I(standLRT^2) + I(standLRT^3) + #
              (standLRT | school), Exam, REML = FALSE)
sim_fm2 <- simulate(fm2, nsim = 19)#
refit_fm2 <- apply(sim_fm2, 2, refit, object = fm2)#
#
## Extract level-1 residuals#
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(x@frame, resid = resid(x)))#
#
## Labeling for nullabor#
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)#
names(sim_fm2_lev1_resid)[4:5] <- c("standLRT2", "standLRT3")#
#
## Formatting for nullabor#
lev1_resid_fm2 <- data.frame(fm2@frame, resid = resid(fm2))#
names(lev1_resid_fm2)[3:4] <- c("standLRT2", "standLRT3")#
class(lev1_resid_fm2[,3])  <- "numeric"#
#
## Creating lineup#
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("red")) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
fm2 <- lmer(log(normexam) ~ standLRT + I(standLRT^2) + I(standLRT^3) + #
              (standLRT | school), Exam, REML = FALSE)#
#
sim_fm2 <- simulate(fm2, nsim = 19)#
refit_fm2 <- apply(sim_fm2, 2, refit, object = fm2)#
#
## Extract level-1 residuals#
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(x@frame, resid = resid(x)))#
#
## Labeling for nullabor#
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)#
names(sim_fm2_lev1_resid)[4:5] <- c("standLRT2", "standLRT3")#
#
## Formatting for nullabor#
lev1_resid_fm2 <- data.frame(fm2@frame, resid = resid(fm2))#
names(lev1_resid_fm2)[3:4] <- c("standLRT2", "standLRT3")#
class(lev1_resid_fm2[,3])  <- "numeric"#
#
## Creating lineup#
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("red")) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
fm2 <- lmer(normexam ~ standLRT + I(standLRT^2) + I(standLRT^3) + #
              (standLRT | school), Exam, REML = FALSE)#
#
sim_fm2 <- simulate(fm2, nsim = 19)#
refit_fm2 <- apply(sim_fm2, 2, refit, object = fm2)#
#
## Extract level-1 residuals#
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(x@frame, resid = resid(x)))#
#
## Labeling for nullabor#
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)#
names(sim_fm2_lev1_resid)[4:5] <- c("standLRT2", "standLRT3")#
#
## Formatting for nullabor#
lev1_resid_fm2 <- data.frame(fm2@frame, resid = resid(fm2))#
names(lev1_resid_fm2)[3:4] <- c("standLRT2", "standLRT3")#
class(lev1_resid_fm2[,3])  <- "numeric"#
#
## Creating lineup#
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("red")) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(x@frame, fitted = fitted(x)))#
lev1_resid_fm2 <- data.frame(fm2@frame, fitted = fitted(fm2))
qplot(fitted, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("red")) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
head(sim_fm2_lev1_resid)
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)
qplot(fitted, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("red")) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
sim(sim_fm2_lev1_resid)
dim(sim_fm2_lev1_resid)
dim(lev1_resid_fm2)
head(lev1_resid_fm2)
head(sim_fm2_lev1_resid)
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(x@frame, fitted = fitted(x), resid = resid(x)))#
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)#
lev1_resid_fm2 <- data.frame(fm2@frame, fitted = fitted(fm2), resid = resid(fm2))
qplot(fitted, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("red")) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
fm3 <- lmer(normexam ~ standLRT + I(standLRT^2) + I(standLRT^3) + #
              (0 + standLRT | school) + (1 | school), Exam, REML = FALSE)
fm3
sim_fm3 <- simulate(fm3, nsim = 19)#
refit_fm3 <- apply(sim_fm3, 2, refit, object = fm3)
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(resid = resid(x), fitted = fitted(x)))#
#
## Labeling for nullabor#
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)#
#
## Formatting for nullabor#
lev1_resid_fm3 <- data.frame(resid = resid(fm3), fitted = fitted(x))
sim_fm2 <- simulate(fm2, nsim = 19)#
refit_fm2 <- apply(sim_fm2, 2, refit, object = fm2)
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(resid = resid(x), fitted = fitted(x)))
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)
lev1_resid_fm3 <- data.frame(resid = resid(fm3), fitted = fitted(x))
lev1_resid_fm3 <- data.frame(resid = resid(fm3), fitted = fitted(fm3))
qplot(fitted, resid, data = lev1_resid_fm3,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm3, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("red")) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 R")
ls()
library(MASS)
fm2
sig.e
sig.e <- sigma(fm2)
sig.e
?mvrnorm
D <- as.matrix(bdiag(VarCorr(fm2)))
D
b <- mvrnorm(n = 65, mu = c(0, 0), Sigma = D)
head(b)
plot(x = b[,1], b[,2])
cor(x = b[,1], b[,2])
cor(x = b[,1], b[,2])
cor(x = b[,1], b[,2])
e <- rnorm(n = nrow(Exam), mean = 0, sd = .5)
fm2
fm2 <- lmer(normexam ~ poly(standLRT, 3) + #
              (standLRT | school), Exam, REML = FALSE)
fm2
args(lme)
library(nlme)
args(lme)
fm2.lme <- lme(fixed = normexam ~ poly(standLRT, 3), data = Exam, random = ~ standLRT)
?lme
fm2.lme <- lme(fixed = normexam ~ poly(standLRT, 3), data = Exam, random = ~ standLRT | school)
fm2.lme
fm2
?varPower
fm.varpower <- lme(fixed = normexam ~ poly(standLRT, 3), data = Exam, #
	random = ~ standLRT | school), weights = varPower())
fm.varpower <- lme(fixed = normexam ~ poly(standLRT, 3), data = Exam, #
	random = ~ standLRT | school, weights = varPower())
fm.varpower
fm.varpower <- lme(fixed = normexam ~ poly(standLRT, 3), data = Exam, #
	random = ~ standLRT | school, weights = varFixed(~ standLRT))
head(Dialyzer)
library(SASmixed)
help(package=lme4)
library(MEMSS)
install.packages("MEMSS")
library(MEMSS)
help(package= MEMSS)
detach(package:nlme)
library(lme4)
lmer()
j <- lmer(rate ~ (pressure + pressure^2 + pressure^3 + pressure^4)*QB + ( pressure + pressure^2 | Subject)
)
j <- lmer(rate ~ (pressure + pressure^2 + pressure^3 + pressure^4)*QB + ( pressure + pressure^2 | Subject), data = Dialyzer)
j
j <- lmer(rate ~ (pressure + pressure^2 + pressure^3 + pressure^4)*QB + ( pressure + I(pressure^2) | Subject), data = Dialyzer)
j
j <- lmer(rate ~ (pressure + pressure^2 + pressure^3 + pressure^4)*QB + ( pressure | Subject), data = Dialyzer)
j
j <- lmer(rate ~ pressure *QB + ( pressure | Subject), data = Dialyzer)
j
str(Dialyzer)
library(nlme)
lme(rate ~(pressure + pressure^2 + pressure^3 + pressure^4)*QB,	Dialyzer, ~ pressure + pressure^2)
detach(package:nlme)
j <- lmer(rate ~ pressure *QB + ( pressure - 1 | Subject), data = Dialyzer)
j
str(Dialyzer)
lmer(rate ~(pressure + pressure^2 + pressure^3 + pressure^4)*QB + (1 | Subject), data = Dialyzer)
lmer(rate ~(pressure + pressure^2 + pressure^3 + pressure^4)*QB + (0 | Subject), data = Dialyzer)
lmer(rate ~(pressure + pressure^2 + pressure^3 + pressure^4)*QB + (0 + pressure | Subject), data = Dialyzer)
lmer(rate ~(pressure + I(pressure^2) + I(pressure^3) + I(pressure^4))*QB + (0 + pressure | Subject), data = Dialyzer)
lmer(rate ~(pressure + I(pressure^2) + I(pressure^3) + I(pressure^4))*QB + (pressure | Subject), data = Dialyzer)
lmer(rate ~(pressure + I(pressure^2) + I(pressure^3) + I(pressure^4))*QB + (pressure + I(pressure^2) | Subject), data = Dialyzer)
help(package=MEMSS)
M2 <- lmer(rate ~ poly(pressure, 4) * QB + (pressure + I(pressure^2) | Subject), data = Dialyzer)
M2
M2 <- lmer(rate ~ poly(pressure, 4) * QB + (poly(pressure, 2) | Subject), data = Dialyzer)
M2
qplot(x = resid(M2), y = pressure, data = Dialyzer)
qplot(x = pressure, y = resid(M2), data = Dialyzer)
m2.sims <- simulate(M2, nsim = 19)#
m2.refit <- lapply(M2.sims, refit, object = M2)#
m2.simy <- lapply(m2.refit, function(x) x@y)
m2.sims <- simulate(M2, nsim = 19)#
m2.refit <- lapply(M2.sims, refit, object = M2)#
m2.simy <- lapply(m2.refit, function(x) x@y)
m2.sims <- simulate(M2, nsim = 19)#
m2.refit <- lapply(m2.sims, refit, object = M2)#
m2.simy <- lapply(m2.refit, function(x) x@y)
m2.sim.resids <- lapply(m2.refit, function(x) data.frame(x@frame, resid = resid(x)))
head(m2.sim.resids)
head(m2.sim.resids[[1]])
M2 <- lmer(rate ~ (pressure + I(pressure^2) + I(pressure^3) + I(pressure^4))*QB + (pressure + I(pressure^2) | Subject), data = Dialyzer)
m2.sims <- simulate(M2, nsim = 19)#
m2.refit <- lapply(m2.sims, refit, object = M2)#
m2.sim.resids <- lapply(m2.refit, function(x) data.frame(x@frame, resid = resid(x)))
head(m2.sim.resids[[1]])
m2.sim.resids <- ldply(m2.refit, function(x) data.frame(x@frame, resid = resid(x)))
head(m2.sim.resids)
m2.sim.resids$.n <- str_extract(m2.sim.resids$id, "\\d+")
m2.sim.resids$.n <- str_extract(m2.sim.resids$.id, "\\d+")
head(m2.sim.resids)
str(m2.sim.resids)
m2.sim.resids$.n <- as.numeric(str_extract(m2.sim.resids$.id, "\\d+"))
m2.resid.df <- data.frame(pressure = M2@frame$pressure, resid = resid(M2))
qplot(pressure, resid, data = m2.resid.df,#
      	geom = "point") %+%#
  	lineup(true = m2.resid.df, samples = m2.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 Fy")
qplot(pressure, resid, data = m2.resid.df,#
      	geom = "point", alpha = I(0.5)) %+%#
  	lineup(true = m2.resid.df, samples = m2.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure + I(pressure^2) | Subject), data = Dialyzer)
lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure| Subject), data = Dialyzer)
lmer(rate ~ (pressure )*QB + (pressure| Subject), data = Dialyzer)
lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure| Subject), data = Dialyzer)
M1 <- lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure| Subject), #
	data = Dialyzer)
qplot(x = pressure, y = resid(M1), data = Dialyzer)
m1.resid.df <- data.frame(pressure = M2@frame$pressure, resid = resid(M2))
qplot(pressure, resid, data = m1.resid.df,#
      	geom = "point", alpha = I(0.5))
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))
qplot(pressure, resid, data = m1.resid.df,#
      	geom = "point", alpha = I(0.5))
qplot(pressure, resid, data = m1.resid.df,#
      	geom = "point", alpha = I(0.8))
qplot(pressure, resid, data = m1.resid.df, geom = "point") %+%
qplot(pressure, resid, data = m1.resid.df, geom = "point")
qplot(pressure, resid, data = m1.resid.df, geom = "point") + #
	geom_smooth(se = F) %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(pressure, resid, data = m1.resid.df, geom = "point") + #
	geom_smooth(se = F)
qplot(pressure, resid, data = m1.resid.df, geom = "point") + #
	geom_smooth()
m1.sims <- simulate(M2, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))
qplot(pressure, resid, data = m1.resid.df, geom = "point") + #
	geom_smooth() %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(pressure, resid, data = m1.resid.df, geom = "point") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(x = pressure, y = rate, data = Dialyzer)
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth")) %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
lmer(rate ~ pressure + QB + (pressure | Subject), #
	data = Dialyzer)
M1 <- lmer(rate ~ (pressure + I(pressure^2) + I(pressure^3))*QB + (pressure | Subject), #
	data = Dialyzer)
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"))
M1 <- lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure | Subject), #
	data = Dialyzer)#
#
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth")) %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
M1 <- lmer(rate ~ (pressure + I(pressure^2) + I(pressure^2))*QB + (pressure | Subject), #
	data = Dialyzer)#
#
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth")) %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
M1 <- lmer(rate ~ (pressure + I(pressure^2) + I(pressure^3))*QB + (pressure | Subject), #
	data = Dialyzer)#
#
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
M1 <- lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure + I(pressure^2) | Subject), #
	data = Dialyzer)#
#
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
?Dialyzer
M2 <- lmer(rate ~ (pressure + I(pressure^2) + I(pressure^3) + I(pressure^4))*QB + (pressure + I(pressure^2) | Subject), data = Dialyzer)#
#
m2.resid.df <- data.frame(pressure = M2@frame$pressure, resid = resid(M2))#
#
m2.sims <- simulate(M2, nsim = 19)#
m2.refit <- lapply(m2.sims, refit, object = M2)#
m2.sim.resids <- ldply(m2.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m2.sim.resids$.n <- as.numeric(str_extract(m2.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m2.resid.df,#
      	geom = "point", alpha = I(0.5)) %+%#
  	lineup(true = m2.resid.df, samples = m2.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
head(Dialyzer)
table(Dialyzer$Subject)
?Dialyzer
M1 <- lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure + I(pressure^2) | Subject), #
	data = Dialyzer)#
#
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
M1 <- lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure + I(pressure^2) | Subject), #
	data = Dialyzer)#
#
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 Fy")
location <- 19#
make_interactive(filename= sprintf("dialyzer-nonlinear-%s-multiple.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js")#
make_interactive(filename= sprintf("dialyzer-nonlinear-%s-single.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js", toggle="select")
Model on page 217 of Pinheiro and Bates#
#
M2 <- lmer(rate ~ (pressure + I(pressure^2) + I(pressure^3) + I(pressure^4))*QB + (pressure + I(pressure^2) | Subject), data = Dialyzer)#
#
m2.resid.df <- data.frame(pressure = M2@frame$pressure, resid = resid(M2))#
#
m2.sims <- simulate(M2, nsim = 19)#
m2.refit <- lapply(m2.sims, refit, object = M2)#
m2.sim.resids <- ldply(m2.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m2.sim.resids$.n <- as.numeric(str_extract(m2.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m2.resid.df,#
      	geom = "point", alpha = I(0.5)) %+%#
  	lineup(true = m2.resid.df, samples = m2.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
saveRDS(m1.resid.df, m1.sim.resids, file = file.choose(new = TRUE))
?saveRDS
save(m1.resid.df, m1.sim.resids, file = file.choose(new = TRUE))
M2 <- lmer(rate ~ (pressure + I(pressure^2) + I(pressure^3) + I(pressure^4))*QB + (pressure + I(pressure^2) | Subject), data = Dialyzer)#
#
m2.resid.df <- data.frame(pressure = M2@frame$pressure, resid = resid(M2))#
#
m2.sims <- simulate(M2, nsim = 19)#
m2.refit <- lapply(m2.sims, refit, object = M2)#
m2.sim.resids <- ldply(m2.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m2.sim.resids$.n <- as.numeric(str_extract(m2.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m2.resid.df,#
      	geom = "point", alpha = I(0.5)) %+%#
  	lineup(true = m2.resid.df, samples = m2.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
location <- 14#
make_interactive(filename= sprintf("dialyzer-heterogeneous-%s-multiple.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js")#
make_interactive(filename= sprintf("dialyzer-heterogeneous-%s-single.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js", toggle="select")
save(m2.resid.df, m2.sim.resids, file = file.choose(new = TRUE))
head(Exam)
fm2 <- lmer(normexam ~ standLRT + I(standLRT^2) + I(standLRT^3) + #
              (standLRT | school), Exam, REML = FALSE)#
#
sim_fm2 <- simulate(fm2, nsim = 19)#
refit_fm2 <- apply(sim_fm2, 2, refit, object = fm2)#
#
## Extract level-1 residuals#
sim_fm2_lev1_resid <- ldply(refit_fm2, function(x) #
	data.frame(x@frame, resid = resid(x)))#
#
## Labeling for nullabor#
sim_fm2_lev1_resid$.n <- rep(1:19, each = 4059)#
names(sim_fm2_lev1_resid)[4:5] <- c("standLRT2", "standLRT3")#
#
## Formatting for nullabor#
lev1_resid_fm2 <- data.frame(fm2@frame, resid = resid(fm2))#
names(lev1_resid_fm2)[3:4] <- c("standLRT2", "standLRT3")#
class(lev1_resid_fm2[,3])  <- "numeric"#
#
## Creating lineup#
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("white"), alpha = I(0.3)) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.3)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("white"), alpha = I(0.5)) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 FR")
geom = "point", alpha = I(0.4)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("white"), alpha = I(0.5)) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.4)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("white"), alpha = I(0.5)) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 Fu")
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.4)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("white"), alpha = I(0.5)) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 9")
location <- 5#
make_interactive(filename= sprintf("exam-homogeneity-%s-multiple.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js")#
make_interactive(filename= sprintf("exam-homogeneity-%s-single.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js", toggle="select")
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.4)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("white"), alpha = I(0.5)) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 FF")
qplot(standLRT2, resid, data = lev1_resid_fm2,#
      	geom = "point", alpha = I(0.4)) %+%#
  	lineup(true = lev1_resid_fm2, samples = sim_fm2_lev1_resid) +#
  	facet_wrap(~ .sample, ncol = 5) +#
  	geom_hline(aes(yintercept = 0), colour = I("white"), alpha = I(0.5)) + #
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
decrypt("P2SX 6lal Y8 5GhYaYG8 R")
ggsave(filename = file.choose(new=TRUE), width=7, height=7, units = "in")
ls()
head(radon)
mod <- lmer(log.radon~basement + uranium + (basement | county), data = radon)
mod
resid.df <- data.frame(e = resid(mod), b = rep(ranef(mod)[[1]][,1], each = table(radon$county)))
rep(ranef(mod)[[1]][,1], each = table(radon$county))
?rep
rep(ranef(mod)[[1]][,1], times = table(radon$county))
resid.df <- data.frame(e = resid(mod), b = rep(ranef(mod)[[1]][,1], times = table(radon$county)))
resid.df <- data.frame(e = resid(mod), b = rep(ranef(mod)[[1]], times = table(radon$county)))
resid.df <- data.frame(e = resid(mod), b0 = rep(ranef(mod)[[1]][,1], times = table(radon$county)), b1 = rep(ranef(mod)[[1]][,2], times = table(radon$county)))
head(resid.df)
qplot(x = b0, y = e, data = resid.df)
with(resid.df, cor(e, b0))
with(resid.df, cor(e, b1))
qplot(x = b0, y = e, data = resid.df, geom = "jitter")
qplot(x = b0, y = e, data = resid.df, geom = "jitter", alpha = I(0.3))
qplot(x = b1, y = e, data = resid.df, geom = "jitter", alpha = I(0.3))
qplot(x = b1^2, y = e, data = resid.df, geom = "jitter", alpha = I(0.3))
qplot(x = b1^2, y = e^2, data = resid.df, geom = "jitter", alpha = I(0.3))
qplot(x = b0^2, y = e^2, data = resid.df, geom = "jitter", alpha = I(0.3))
-------------------------------------------------------------------------------#
# Preliminaries#
#-------------------------------------------------------------------------------#
#
setwd("~/Documents/Thesis/Dissertation/sociology_chapter/")#
library(ggplot2)#
library(lme4)     # for modeling#
library(HLMdiag)  # for residuals#
library(mlmRev)   # for the exam data#
library(nullabor) # for lineups#
library(plyr)#
library(reshape2)#
library(stringr)#
library(gridSVG)#
#
source("R/add_interaction.R")#
#
library(MEMSS) # for the Dialyzer data set
M1 <- lmer(rate ~ (pressure + I(pressure^2))*QB + (pressure + I(pressure^2) | Subject), #
	data = Dialyzer)#
#
m1.resid.df <- data.frame(pressure = M1@frame$pressure, resid = resid(M1))#
#
m1.sims <- simulate(M1, nsim = 19)#
m1.refit <- lapply(m1.sims, refit, object = M1)#
m1.sim.resids <- ldply(m1.refit, function(x) data.frame(x@frame, resid = resid(x)))#
m1.sim.resids$.n <- as.numeric(str_extract(m1.sim.resids$.id, "\\d+"))#
#
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
load('~/Documents/Thesis/Dissertation/sociology_chapter/lineups_data/dialyzer-nonlinear.RData')
ls()
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
qplot(pressure, resid, data = m1.resid.df, geom = c("point", "smooth"),#
	method = "loess") %+%#
  	lineup(true = m1.resid.df, samples = m1.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
location <- 17#
make_interactive(filename= sprintf("dialyzer-nonlinear-%s-multiple.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js")#
make_interactive(filename= sprintf("dialyzer-nonlinear-%s-single.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js", toggle="select")
ggsave(file.choose(new=TRUE))
load('~/Documents/Thesis/Dissertation/sociology_chapter/lineups_data/dialyzer-heterogeneous.RData')
qplot(pressure, resid, data = m2.resid.df,#
      	geom = "point", alpha = I(0.5)) %+%#
  	lineup(true = m2.resid.df, samples = m2.sim.resids) +#
  	facet_wrap(~ .sample, ncol = 5) +#
 	 xlab(NULL) + ylab(NULL) + #
	theme(axis.text.y = element_blank(), axis.text.x = element_blank(),#
	axis.ticks.x = element_blank(), axis.ticks.y = element_blank())
location <- 3#
make_interactive(filename= sprintf("dialyzer-heterogeneous-%s-multiple.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js")#
make_interactive(filename= sprintf("dialyzer-heterogeneous-%s-single.svg", location), #
		script="http://www.hofroe.net/examples/lineup/action.js", toggle="select")
ggsave(file.choose(new=TRUE))
citation(package="MEMSS")
121^.5
library(MEMSS)
?Dialyzer
?Dialyzer
